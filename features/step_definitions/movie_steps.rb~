# Add a declarative step here for populating the DB with movies.

Given /the following movies exist/ do |movies_table|   #เพิ่มข้อมูล movie ลง DB
  movies_table.hashes.each do |movie|

	Movie.create(movie)
  end
  #flunk "Unimplemented"
end

# Make sure that one string (regexp) occurs before or after another one
#   on the same page

Then /I should see "(.*)" before "(.*)"/ do |e1, e2|  #คำสั่งเพื่อให้แสดงค่า e1 (ที่รับเข้ามา) ก่อน e2(ที่รับเข้ามาเช่นกัน)

	assert page.body =~ /#{e1}.+#{e2}/m

  #flunk "Unimplemented"
end

# Make it easier to express checking or unchecking several boxes at once
#  "When I uncheck the following ratings: PG, G, R"
#  "When I check the following ratings: G"

When /I (un)?check the following ratings: (.*)/ do |uncheck, rating_list| #คำสั่งเพื่อตรวจสอบว่าเราcheck ค่า rating เป็นอะไร

	if uncheck == "un"
    rating_list.split(', ').each {|x| step %{I uncheck "ratings_#{x}"}}
  else
    rating_list.split(', ').each {|x| step %{I check "ratings_#{x}"}}
  end

  # HINT: use String#split to split up the rating_list, then
  #   iterate over the ratings and reuse the "When I check..." or
  #   "When I uncheck..." steps in lines 89-95 of web_steps.rb
end

Then /I should see all of the movies/ do #คำสั่งเพื่อแสดงค่าของmovies ทุกค่า
  
  rows = page.all('#movies tr').size - 1
  assert rows == Movie.count()
# Make sure that all the movies in the app are visible in the table
end

Then /^the director of "([^"]*)" should be "([^"]*)"$/ do |title, director|
  movie = Movie.find_by_title(title)
  movie.director.should == director
end

